{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/createaccount/createaccount.component.ts","webpack:///src/app/components/createaccount/createaccount.component.html","webpack:///src/app/components/forms/forms.component.ts","webpack:///src/app/components/forms/forms.component.html","webpack:///src/app/components/home/home.component.ts","webpack:///src/app/components/home/home.component.html","webpack:///src/app/components/login/login.component.ts","webpack:///src/app/components/login/login.component.html","webpack:///src/app/components/tickpage/tickpage.component.ts","webpack:///src/app/components/tickpage/tickpage.component.html","webpack:///src/app/service/cycleform.service.ts","webpack:///src/app/service/userapi.service.ts","webpack:///src/app/service/userguard.guard.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","canActivate","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","CreateaccountComponent","services","toastr","formbuilder","deviceService","router","ismobile","userforms","group","email","password","required","name","mobilenumber","isMobile","cerateaccount","value","subscribe","result","infoToastr","position","navigateByUrl","err","error","errorToastr","message","createaccount","FormsComponent","userapi","arraydata","isMobilevar","status","packagedetails","packagename","price","arraydetails","userdetails","localStorage","getItem","push","JSON","parse","forEach","element","console","log","pan","charger","logout","addmoredetails","reset","event","target","selectedpackage","onselecpackage","booknow","HomeComponent","LoginComponent","navigate","login","location","href","gotocreatepage","TickpageComponent","CycleformService","http","BaseUrl1","get","moredetails","post","users","res","providedIn","UserapiService","BaseUrl","map","user","setItem","stringify","removeItem","UserGuard","route","state","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { CreateaccountComponent } from './components/createaccount/createaccount.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { FormsComponent } from './components/forms/forms.component';\nimport { TickpageComponent } from './components/tickpage/tickpage.component';\nimport { UserGuard } from './service/userguard.guard';\n\n\nconst routes: Routes = [\n  {\n    path: 'create', component: CreateaccountComponent\n  },\n  {\n    path: 'login', component: LoginComponent\n  },\n  {\n    path: 'forms', component: FormsComponent, canActivate: [UserGuard]\n  },\n  {\n    path: 'tickpage', component: TickpageComponent, canActivate: [UserGuard]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'Gotothechange';\n}\n","<router-outlet>\n    \n</router-outlet>\n<app-home></app-home>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { MDBBootstrapModule } from 'angular-bootstrap-md';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ToastrModule } from 'ng6-toastr-notifications';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { DeviceDetectorModule } from 'ngx-device-detector';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { CreateaccountComponent } from './components/createaccount/createaccount.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { FormsComponent } from './components/forms/forms.component';\nimport { UserGuard } from './service/userguard.guard';\nimport { TickpageComponent } from './components/tickpage/tickpage.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    CreateaccountComponent,\n    LoginComponent,\n    FormsComponent,\n    TickpageComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    MDBBootstrapModule.forRoot(),\n    DeviceDetectorModule.forRoot(),\n    FormsModule,\n    ReactiveFormsModule,\n    ToastrModule.forRoot(),\n    HttpClientModule,\n    BrowserAnimationsModule\n  ],\n  providers: [UserGuard],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { DeviceDetectorService } from 'ngx-device-detector';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { UserapiService } from '../../service/userapi.service';\nimport { ToastrManager } from 'ng6-toastr-notifications';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-createaccount',\n  templateUrl: './createaccount.component.html',\n  styleUrls: ['./createaccount.component.scss']\n})\nexport class CreateaccountComponent implements OnInit {\n  isMobile: boolean;\n  userforms: FormGroup;\n  error: any;\n  messageSuccess: boolean;\n  constructor(private services: UserapiService, private toastr: ToastrManager,\n              private formbuilder: FormBuilder, private deviceService: DeviceDetectorService, private router: Router) {\n    this.ismobile();\n  }\n  ngOnInit() {\n    this.userforms = this.formbuilder.group({\n      email: ['', Validators.email],\n      password: ['', Validators.required],\n      name: ['', Validators.required],\n      mobilenumber: ['', Validators.required]\n    });\n  }\n  ismobile() {\n    this.isMobile = this.deviceService.isMobile();\n  }\n  createaccount() {\n    this.services.cerateaccount(this.userforms.value).subscribe(result => {\n      if (this.isMobile) {\n        this.toastr.infoToastr('Howdy' + ' ' + this.userforms.value.name + ' ' + 'you successfully registered', 'Howdy', {\n          position: 'bottom-left',\n        });\n      }\n      // this.userforms.reset();\n      this.router.navigateByUrl('');\n    },\n      err => {\n        this.error = err.error;\n        this.toastr.errorToastr(this.error.message, 'Warning', {\n          position: 'bottom-left'\n        });\n      });\n  }\n}\n","<div class=\"main\">\n    <div class=\"content\">\n        <div class=\"animated animatedFadeInUp fadeInUp\">\n            <div class=\"cont\">\n                <div class=\"form\">\n                    <form [formGroup]=\"userforms\" novalidate>\n                        <h1 class=\"pb-2\">Create Account</h1>\n                        <input type=\"email\" class=\"user\" formControlName=\"email\" placeholder=\"useremail\" />\n                        <input type=\"text\" class=\"user\" formControlName=\"name\" placeholder=\"username\" />\n                        <input type=\"number\" class=\"user\" formControlName=\"mobilenumber\" placeholder=\"mobilenumber\" />\n                        <input type=\"password\" formControlName=\"password\" class=\"pass\" placeholder=\"Password\" />\n                        <button class=\"login\" (click)=\"createaccount()\">create account</button>\n                    </form>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { CycleformService } from '../../service/cycleform.service';\nimport { DeviceDetectorService } from 'ngx-device-detector';\nimport { ToastrManager } from 'ng6-toastr-notifications';\nimport { UserapiService } from '../../service/userapi.service';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n@Component({\n  selector: 'app-forms',\n  templateUrl: './forms.component.html',\n  styleUrls: ['./forms.component.scss']\n})\nexport class FormsComponent implements OnInit {\n  userdetails: any;\n  arraydata: any = [];\n  userdatas: any;\n  finaldatas: any;\n  userforms: FormGroup;\n  error: any;\n  public isMobilevar = false;\n  email: any;\n  status = true;\n  public packagedetails = [{\n    id: 1,\n    packagename: 'Weeklsubscription',\n    price: 800\n  },\n  {\n    id: 2,\n    packagename: 'Dailysubscription',\n    price: 100\n  },\n  {\n    id: 3,\n    packagename: 'Hourlysubscription',\n    price: 50\n  }\n  ];\n  arraydetails: any = [];\n  selectedpackage: any;\n  constructor(private userapi: UserapiService, private formbuilder: FormBuilder, private services: CycleformService, private router: Router,\n              private deviceService: DeviceDetectorService,\n  ) {\n    this.isMobile();\n  }\n\n  ngOnInit(): void {\n    this.userdetails = localStorage.getItem('currentUser');\n    this.arraydata.push(JSON.parse(this.userdetails));\n    this.arraydata.forEach(element => {\n      console.log(element.email);\n      this.email = element.email;\n    });\n    this.userforms = this.formbuilder.group({\n      pan: ['', Validators.required],\n      charger: ['', Validators.required],\n      package: ['', Validators.required],\n      email: [this.email],\n    });\n    console.log(this.email);\n  }\n  public isMobile() {\n    this.isMobilevar = this.deviceService.isMobile();\n  }\n  logout() {\n    this.userapi.logout();\n    this.router.navigateByUrl('/');\n  }\n  booknow() {\n    this.services.addmoredetails(this.userforms.value).subscribe(result => {\n      this.userforms.reset();\n      this.router.navigateByUrl('/tickpage');\n    },\n      err => {\n        this.error = err.error;\n        console.log(this.error);\n      });\n  }\n  onselecpackage(event) {\n    if (event.target.value) {\n      this.packagedetails.forEach(element => {\n        if (event.target.value === element.packagename) {\n          this.selectedpackage = 'hello you chosen' + ' ' +  element.packagename + 'Plan cost is RS.' + ' ' +  element.price;\n        }\n      });\n    }\n  }\n}\n","<div class=\"main\">\n    <div class=\"content\">\n        <div class=\"container\">\n            <div class=\"form\">\n                <form [formGroup]=\"userforms\" novalidate>\n                    <div class=\"md-form  d-none\">\n                        <input mdbInput type=\"text\" id=\"email\" class=\"form-control\" formControlName=\"email\" hidden />\n                        <label for=\"email\" class=\"\">email</label>\n                    </div>\n\n                    <div class=\"md-form\">\n                        <input mdbInput type=\"text\" id=\"pan\" class=\"form-control\" formControlName=\"pan\">\n                        <label for=\"pan\" class=\"\">Pancard Number</label>\n                    </div>\n                    <h5>Do you need Charger?</h5>\n                    <div class=\"md-form\">\n                        <label class=\"packagecontainer\">Yes\n                            <input type=\"radio\" value=\"yes\" checked=\"checked\" formControlName=\"charger\">\n                            <span class=\"checkmark\"></span>\n                        </label>\n                    </div>\n                    <div class=\"md-form\">\n                        <label class=\"packagecontainer\">No\n                            <input type=\"radio\" value=\"No\" checked=\"checked\" formControlName=\"charger\">\n                            <span class=\"checkmark\"></span>\n                        </label>\n                    </div>\n                    <div class=\"md-form\">\n                        <h3>choose a plan</h3>\n                        <select formControlName=\"package\" (change)=\"onselecpackage($event)\">\n                            <option *ngFor=\"let packages of packagedetails\"  [value]=\"packages.packagename\"> \n                                {{packages.packagename}}\n                            </option>\n                        </select>\n                    </div>\n                    <div class=\"container bg-light\">\n                        <p class=\"text-dark font-weight-bold\">{{selectedpackage}}</p>\n                    </div>\n                    <button [disabled]=\"userforms.pristine || userforms.invalid\" mdbBtn type=\"button\" color=\"dark-green\" (click)=\"booknow()\" mdbWavesEffect>Book Now</button>\n                </form>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div class=\"bg-dark w-100 fixed-bottom\">\n    <p (click)=\"logout()\" class=\"text-center text-white font-weight-bold mt-2\">Logout</p>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { DeviceDetectorService } from 'ngx-device-detector';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n  isMobile: boolean;\n\n  constructor(private deviceService: DeviceDetectorService) {\n    this.ismobile();\n  }\n  ngOnInit(): void {\n  }\n  ismobile() {\n    this.isMobile = this.deviceService.isMobile();\n\n  }\n}\n","<!--Navbar-->\n<mdb-navbar SideClass=\"navbar navbar-expand-lg navbar-dark cyan top-fixed\" [containerInside]=\"false\" [class.d-none]=\"!isMobile\">\n\n    <!-- Navbar brand -->\n    <mdb-navbar-brand><a class=\"navbar-brand\" href=\"#\">Gotothechange</a></mdb-navbar-brand>\n\n    <!-- Collapsible content -->\n    <links>\n\n        <!-- Links -->\n        <ul class=\"navbar-nav ml-auto\">\n            <li class=\"nav-item\">\n                <a class=\"nav-link waves-light\" routerLink=\"create\" mdbWavesEffect>\n                    <mdb-icon fas icon=\"cog\"></mdb-icon> createaccount\n                </a>\n            </li>\n            <li class=\"nav-item\">\n                <a class=\"nav-link waves-light\" routerLink=\"login\" mdbWavesEffect>\n                    <mdb-icon fas icon=\"cog\"></mdb-icon> login\n                </a>\n            </li>\n            <li class=\"nav-item\">\n                <a class=\"nav-link waves-light\" routerLink=\"forms\" mdbWavesEffect>\n                    <mdb-icon fas icon=\"cog\"></mdb-icon> Getcycle\n                </a>\n            </li>\n\n        </ul>\n        <!-- Links -->\n    </links>\n    <!-- Collapsible content -->\n\n</mdb-navbar>\n<!--/.Navbar-->","import { Component, OnInit } from '@angular/core';\nimport { DeviceDetectorService } from 'ngx-device-detector';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { UserapiService } from '../../service/userapi.service';\nimport { ToastrManager } from 'ng6-toastr-notifications';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  isMobile: boolean;\n  userforms: FormGroup;\n  error: any;\n  messageSuccess: boolean;\n  constructor(private services: UserapiService, private toastr: ToastrManager,\n              private formbuilder: FormBuilder, private deviceService: DeviceDetectorService, private router: Router) {\n    this.ismobile();\n  }\n  ngOnInit() {\n    this.userforms = this.formbuilder.group({\n      email: ['', Validators.email],\n      password: ['', Validators.required]\n    });\n  }\n  ismobile() {\n    this.isMobile = this.deviceService.isMobile();\n  }\n  gotocreatepage() {\n    this.router.navigate(['create']);\n  }\n  login() {\n    this.services.login(this.userforms.value).subscribe(result => {\n      if (this.isMobile) {\n        location.href = '/forms';\n      }\n      this.userforms.reset();\n    },\n      err => {\n        this.error = err.error;\n        console.log(this.error);\n        this.toastr.errorToastr(this.error.message, 'Warning', {\n          position: 'bottom-left'\n        });\n      });\n  }\n}\n","<div class=\"main\">\n    <div class=\"content\">\n      <div class=\"animated animatedFadeInUp fadeInUp\">\n        <div class=\"cont\">\n          <div class=\"form\">\n            <form [formGroup]=\"userforms\" novalidate>\n              <h1>Sign Up</h1>\n              <input type=\"email\" class=\"user\" formControlName=\"email\" placeholder=\"useremail\" />\n              <input type=\"password\" formControlName=\"password\" class=\"pass\" placeholder=\"Password\" />\n              <button class=\"login\" (click)=\"login()\" [disabled]=\"userforms.pristine || userforms.invalid\" >Login</button>\n            </form>\n            <h4 class=\"text-dark\">or</h4>\n            <button class=\"login bg-danger w-50\" [class.w-75]=\"isMobile\" (click)=\"gotocreatepage()\">create\n              account</button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>","import { Component, OnInit } from '@angular/core';\nimport { UserapiService } from '../../service/userapi.service';\nimport { Router, ActivatedRoute } from '@angular/router';\n@Component({\n  selector: 'app-tickpage',\n  templateUrl: './tickpage.component.html',\n  styleUrls: ['./tickpage.component.scss']\n})\nexport class TickpageComponent implements OnInit {\n\n  constructor(private userapi: UserapiService, private router: Router) {\n  }\n  ngOnInit(): void {\n  }\n  logout() {\n    this.userapi.logout();\n    this.router.navigateByUrl('/');\n  }\n}\n","<div class=\"main\">\n    <div class=\"content\">\n\n        <h4 class=\"text-dark animated bounce\">Thanks for your submission</h4>\n        <!-- <img class=\"animated bounce\" src=\"https://mdbootstrap.com/img/logo/mdb-transparent.png\"> -->\n    </div>\n</div>\n<div class=\"bg-dark w-100 fixed-bottom\">\n    <p (click)=\"logout()\" class=\"text-center text-white font-weight-bold mt-2\">Logout</p>\n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { User } from './users';\nimport { Moredetails } from './users';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CycleformService {\n  private BaseUrl1 = `https://dashboard.heroku.com/log`;\n\n  constructor(private http: HttpClient) { }\n  getuserdetails() {\n    return this.http.get(this.BaseUrl1 + '/getbookingdetails');\n  }\n  addmoredetails(moredetails: Moredetails) {\n    return this.http.post(this.BaseUrl1 + '/bookingdetails', moredetails);\n  }\n  getuserinfo() {\n    return this.http.get(this.BaseUrl1 + '/getbookingdetails');\n\n  }\n  edituserinfo(id) {\n    return this.http.get(this.BaseUrl1 + '/edit/' + id);\n  }\n  deleteBusiness(id) {\n    return this.http.get(this.BaseUrl1 + '/delete', id);\n  }\n  updateuser(users: User, id) {\n    this\n      .http\n      .post(this.BaseUrl1 + '/update/' + id, users)\n      .subscribe(res => console.log('Done', users));\n  }\n}\n\n","import { Injectable } from '@angular/core';\nimport { HttpClient} from '@angular/common/http';\nimport 'rxjs/add/operator/map';\nimport { User } from './users';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserapiService {\n  private BaseUrl = `https://dashboard.heroku.com/log`;\n\n\n  constructor(private http: HttpClient) { }\n\n  cerateaccount(userdetails: User) {\n    return this.http.post(this.BaseUrl + '/signup', userdetails);\n  }\n\n  login(userdetails: User) {\n    return this.http.post<any>(this.BaseUrl + '/login', userdetails)\n      .map(user => {\n        if (user) {\n          localStorage.setItem('currentUser', JSON.stringify(user));\n        }\n\n        return user;\n      });\n  }\n\n  logout() {\n    localStorage.removeItem('currentUser');\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\n\n@Injectable()\nexport class UserGuard implements CanActivate {\n\n  constructor(private router: Router) { }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    if (localStorage.getItem('currentUser')) {\n      // logged in so return true\n      return true;\n    }\n\n    // not logged in so redirect to login page with the return url\n    this.router.navigate(['/login']);\n    return false;\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}